# Importing header files
import numpy as np
import warnings

warnings.filterwarnings('ignore')

#New record
new_record=[[50,  9,  4,  1,  0,  0, 40,  0]]

#Reading file
data = np.genfromtxt(path, delimiter=",", skip_header=1)

#Code starts here
census=np.concatenate((new_record,data),axis=0)

age=census[:,0]
max_age=np.max(age)
min_age=np.min(age)
age_mean=np.mean(age)
age_std=np.std(age)



race_0=census[census[:,2]==0]
race_1=census[census[:,2]==1]
race_2=census[census[:,2]==2]
race_3=census[census[:,2]==3]
race_4=census[census[:,2]==4]


len_0=np.size(race_0)
len_1=np.size(race_1)
len_2=np.size(race_2)
len_3=np.size(race_3)
len_4=np.size(race_4)


mini=min(len_0,len_1,len_2,len_3,len_4)

if mini==len_0:
    minority_race=0
elif mini==len_1:
    minority_race=1
elif mini==len_2:
    minority_race=2
elif mini==len_3:
    minority_race=3
else:
    minority_race=4


senior_citizens=census[census[:,0]>60]

working_hours_sum=np.sum(senior_citizens[:,6],axis=0)

senior_citizens_len=np.size(senior_citizens)

avg_working_hours=working_hours_sum/senior_citizens_len

print(avg_working_hours)


high=census[census[:,1]>10]
low=census[census[:,1]<=10]

avg_pay_high=np.mean(high[:,7])
avg_pay_low=np.mean(low[:,7])

print(avg_pay_high)
print(avg_pay_low)


